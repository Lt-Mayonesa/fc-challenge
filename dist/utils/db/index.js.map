{"version":3,"sources":["../../../src/utils/db/index.js"],"names":["mongoose","Promise","global","connection","connect","config","database","uri","then","logger","info","env","db","catch","err","message","code","error"],"mappings":";;;;;;AAAA;;;;AAEA;;;;AACA;;;;;;AAEAA,mBAASC,OAAT,GAAmBC,OAAOD,OAA1B;;AAEA,IAAME,aAAaH,mBAASI,OAAT,CAAiBC,iBAAOC,QAAP,CAAgBC,GAAjC,CAAnB;;AAEAJ,WACEK,IADF,CACO,cAAM;AACXC,kBAAOC,IAAP,gCAEEL,iBAAOC,QAAP,CAAgBC,GAFlB,4BAGwBF,iBAAOM,GAH/B;AAKA,QAAOC,EAAP;AACA,CARF,EASEC,KATF,CASQ,eAAO;AACb,KAAIC,IAAIC,OAAJ,CAAYC,IAAZ,KAAqB,WAAzB,EAAsC;AACrCP,mBAAOC,IAAP,CAAY,iDAAZ;AACAV,qBAASI,OAAT,CAAiBC,iBAAOC,QAAP,CAAgBC,GAAjC;AACA,EAHD,MAGO;AACNE,mBAAOQ,KAAP,CAAa,gDAAb;AACAR,mBAAOQ,KAAP,CAAaH,GAAb;AACA;AACD,CAjBF;;kBAmBeX,U","file":"index.js","sourcesContent":["import mongoose from 'mongoose';\n\nimport config from '../../config';\nimport logger from '../logger';\n\nmongoose.Promise = global.Promise;\n\nconst connection = mongoose.connect(config.database.uri);\n\nconnection\n\t.then(db => {\n\t\tlogger.info(\n\t\t\t`Successfully connected to ${\n\t\t\t\tconfig.database.uri\n\t\t\t} MongoDB cluster in ${config.env} mode.`\n\t\t);\n\t\treturn db;\n\t})\n\t.catch(err => {\n\t\tif (err.message.code === 'ETIMEDOUT') {\n\t\t\tlogger.info('Attempting to re-establish database connection.');\n\t\t\tmongoose.connect(config.database.uri);\n\t\t} else {\n\t\t\tlogger.error('Error while attempting to connect to database:');\n\t\t\tlogger.error(err);\n\t\t}\n\t});\n\nexport default connection;\n"]}