{"version":3,"sources":["../../src/controllers/ObjectController.js"],"names":["all","get","set","deleteOne","deleteAll","req","res","next","Model","find","exec","err","collection","json","map","each","key","findOne","params","doc","now","Date","touchedAt","setTime","getTime","ttl","logger","log","save","updated","value","rand_string","update","upsert","setDefaultsOnInsert","created","obj","body","result","status","nModified","error","remove"],"mappings":"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","file":"ObjectController.js","sourcesContent":["import Model, { cleanUp } from '../models/Object';\nimport logger from '../utils/logger';\nimport uuid from 'uuid/v1';\n\nexport function all(req, res, next) {\n\tModel.find(null).exec(function(err, collection) {\n\t\tif (err) return next(err);\n\t\treturn res.json(collection.map(each => each.key));\n\t});\n}\n\nexport function get(req, res, next) {\n\tModel.findOne({ key: req.params.key }).exec(function(err, doc) {\n\t\tif (err) return next(err);\n\t\t// validate if key exists and time to live is not exceded\n\t\tlet now = new Date();\n\t\tif (\n\t\t\tdoc &&\n\t\t\tnow <= doc.touchedAt.setTime(doc.touchedAt.getTime() + doc.ttl)\n\t\t) {\n\t\t\tlogger.log('Cache hit');\n\t\t\t// It's a HIT: save the value in order to update 'touchedAt' value\n\t\t\tdoc.save(function(err, updated) {\n\t\t\t\tif (err) return next(err);\n\t\t\t\treturn res.json(doc.value);\n\t\t\t});\n\t\t} else {\n\t\t\t// It's a MISS: generate new random string and save the key, value\n\t\t\tlogger.log('Cache miss');\n\t\t\tlet rand_string = uuid();\n\t\t\tModel.update(\n\t\t\t\t{ key: req.params.key },\n\t\t\t\t{\n\t\t\t\t\tkey: req.params.key,\n\t\t\t\t\tvalue: rand_string\n\t\t\t\t},\n\t\t\t\t{ upsert: true, setDefaultsOnInsert: true },\n\t\t\t\tfunction(err, created) {\n\t\t\t\t\tif (err) return next(err);\n\t\t\t\t\tcleanUp(Model);\n\t\t\t\t\treturn res.json(rand_string);\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t});\n}\n\nexport function set(req, res, next) {\n\tconst obj = {\n\t\tkey: req.params.key,\n\t\tvalue: req.body.value\n\t};\n\tModel.update(\n\t\t{ key: req.params.key },\n\t\tobj,\n\t\t{ upsert: true, setDefaultsOnInsert: true },\n\t\tfunction(err, result) {\n\t\t\tif (err) return next(err);\n\t\t\treturn res.status(!result.nModified ? 201 : 200).json(obj);\n\t\t}\n\t);\n}\n\nexport function deleteOne(req, res, next) {\n\tModel.deleteOne({ key: req.params.key }, function(err) {\n\t\tlogger.error(err);\n\t\tif (err) return next(err);\n\n\t\treturn res.json();\n\t});\n}\n\nexport function deleteAll(req, res, next) {\n\tModel.remove({}, function(err) {\n\t\tif (err) return next(err);\n\t\treturn res.json([]);\n\t});\n}\n"]}