{"version":3,"sources":["../src/server.js"],"names":["app","use","bodyParser","urlencoded","extended","json","listen","config","server","port","err","logger","error","process","exit","require","fs","readdirSync","path","join","__dirname","map","file","info","env"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAGA;;;;AACA;;;;;;AAEA;;;AAJA;AAKA,IAAMA,MAAM,wBAAZ;;AAEA;AACAA,IAAIC,GAAJ,CAAQ,qBAAR;AACAD,IAAIC,GAAJ,CAAQC,qBAAWC,UAAX,CAAsB,EAAEC,UAAU,IAAZ,EAAtB,CAAR;AACAJ,IAAIC,GAAJ,CAAQC,qBAAWG,IAAX,EAAR;;AAEA;AACAL,IAAIC,GAAJ,CAAQ,sBAAO,UAAP,CAAR;;AAEA;AACAD,IAAIM,MAAJ,CAAWC,iBAAOC,MAAP,CAAcC,IAAzB,EAA+B,eAAO;AACrC,KAAIC,GAAJ,EAAS;AACRC,mBAAOC,KAAP,CAAaF,GAAb;AACAG,UAAQC,IAAR,CAAa,CAAb;AACA;;AAED;AACAC,SAAQ,YAAR;;AAEA;AACAC,cAAGC,WAAH,CAAeC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,EAA+CC,GAA/C,CAAmD,gBAAQ;AAC1DN,UAAQ,cAAcO,IAAtB,EAA4BtB,GAA5B;AACA,EAFD;;AAIA;AACAW,kBAAOY,IAAP,iCAC+BhB,iBAAOC,MAAP,CAAcC,IAD7C,YACwDF,iBAAOiB,GAD/D;AAGA,CAlBD;;kBAoBexB,G","file":"server.js","sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport express from 'express';\nimport bodyParser from 'body-parser';\nimport cors from 'cors';\nimport morgan from 'morgan';\n\n// import custom configuration and utilities\nimport config from './config';\nimport logger from './utils/logger';\n\n// initialize the app\nconst app = express();\n\n// initialize middleware\napp.use(cors());\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json());\n\n// initialize our logger\napp.use(morgan('combined'));\n\n// listen on the designated port found in the configuration\napp.listen(config.server.port, err => {\n\tif (err) {\n\t\tlogger.error(err);\n\t\tprocess.exit(1);\n\t}\n\n\t// require the database library (which instantiates a connection to mongodb)\n\trequire('./utils/db');\n\n\t// loop through all routes and dynamically require them â€“ passing api\n\tfs.readdirSync(path.join(__dirname, 'routes')).map(file => {\n\t\trequire('./routes/' + file)(app);\n\t});\n\n\t// output the status of the api in the terminal\n\tlogger.info(\n\t\t`API is now running on port ${config.server.port} in ${config.env} mode`\n\t);\n});\n\nexport default app;\n"]}